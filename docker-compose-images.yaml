version: "3.8"

services:
  mongo-ms-auth:
    image: mongo:3.6
    container_name: mongo-ms-auth
    ports:
      - "27017:27017"
    volumes:
      - mongo-auth-volume:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=12345
    networks:
      - net-ms
  
  mongo-ms-order:
    image: mongo:3.6
    container_name: mongo-ms-order
    ports:
      - "27018:27017"
    volumes:
      - mongo-order-volume:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=12345
    networks:
      - net-ms
  
  mongo-ms-payment:
    image: mongo:3.6
    container_name: mongo-ms-payment
    ports:
      - "27019:27017"
    volumes:
      - mongo-payment-volume:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=12345
    networks:
      - net-ms
  
  mongo-ms-store:
    image: mongo:3.6
    container_name: mongo-ms-store
    ports:
      - "27020:27017"
    volumes:
      - mongo-store-volume:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=12345
    networks:
      - net-ms
  
  mongo-ms-delivery:
    image: mongo:3.6
    container_name: mongo-ms-delivery
    ports:
      - "27021:27017"
    volumes:
      - mongo-delivery-volume:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=12345
    networks:
      - net-ms

  ms-auth:
    build:
      dockerfile: ms-auth/Dockerfile
      context: .
    image: localhost:5001/image-ms-auth
    container_name: ms-auth
    # ports:
    #   - 8080:3000
    environment:
      - PORT=3000
      - MONGO_HOST=mongo-ms-auth
      - MONGO_PORT=27017
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - MONGO_DATABASE_NAME=auth
      - MONGO_DATABASE_SOURCE=admin
      - TOKEN_TIMEOUT=15
      - TOKEN_SECRET_WORD=73e89911-5a82-428e-913e-19086d7bd2ba
    depends_on:
      - mongo-ms-auth
    restart: always
    networks:
      - net-ms
  
  ms-order:
    build:
      dockerfile: ms-order/Dockerfile
      context: .
    image: localhost:5001/image-ms-order
    container_name: ms-order
    # ports:
    #   - 8081:3000
    environment:
      - PORT=3000
      - MONGO_HOST=mongo-ms-order
      - MONGO_PORT=27017
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - MONGO_DATABASE_NAME=order
      - MONGO_DATABASE_SOURCE=admin
      - RABBITMQ_HOST=rabbitmq:5672
      - QUEUE_ORDER_CREATED_EVENT=ORDER_CREATED_EVENT
      - EXCHANGE_ORDER_COMPLETED_EVENT=EXCHANGE_ORDER_COMPLETED_EVENT
      - EXCHANGE_ERROR_EVENT=EXCHANGE_ERROR_EVENT
    depends_on:
      - mongo-ms-order
      - rabbitmq
    restart: always
    networks:
      - net-ms
  
  ms-payment:
    build:
      dockerfile: ms-payment/Dockerfile
      context: .
    image: localhost:5001/image-ms-payment
    container_name: ms-payment
    # ports:
    #   - 8082:3000
    environment:
      - PORT=3000
      - MONGO_HOST=mongo-ms-payment
      - MONGO_PORT=27017
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - RABBITMQ_HOST=rabbitmq:5672
      - QUEUE_ORDER_CREATED_EVENT=ORDER_CREATED_EVENT
      - QUEUE_ORDER_PAID_EVENT=ORDER_PAID_EVENT
      - EXCHANGE_ORDER_COMPLETED_EVENT=EXCHANGE_ORDER_COMPLETED_EVENT
    depends_on:
      - mongo-ms-payment
      - rabbitmq
    restart: always
    networks:
      - net-ms

  ms-store:
    build:
      dockerfile: ms-store/Dockerfile
      context: .
    image: localhost:5001/image-ms-store
    container_name: ms-store
    # ports:
    #   - 8083:3000
    environment:
      - PORT=3000
      - MONGO_HOST=mongo-ms-store
      - MONGO_PORT=27017
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - RABBITMQ_HOST=rabbitmq:5672
      - QUEUE_ORDER_PAID_EVENT=ORDER_PAID_EVENT
      - QUEUE_ORDER_STORED_EVENT=ORDER_STORED_EVENT
      - EXCHANGE_ERROR_EVENT=EXCHANGE_ERROR_EVENT
    depends_on:
      - mongo-ms-store
      - rabbitmq
    restart: always
    networks:
      - net-ms

  ms-delivery:
    build:
      dockerfile: ms-delivery/Dockerfile
      context: .
    image: localhost:5001/image-ms-delivery
    container_name: ms-delivery
    # ports:
    #   - 8084:3000
    environment:
      - PORT=3000
      - MONGO_HOST=mongo-ms-store
      - MONGO_PORT=27017
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - RABBITMQ_HOST=rabbitmq:5672
      - QUEUE_ORDER_STORED_EVENT=ORDER_STORED_EVENT
      - EXCHANGE_ORDER_COMPLETED_EVENT=EXCHANGE_ORDER_COMPLETED_EVENT
      - EXCHANGE_ERROR_EVENT=EXCHANGE_ERROR_EVENT
    depends_on:
      - mongo-ms-delivery
      - rabbitmq
    restart: always
    networks:
      - net-ms

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostic -q ping
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2s
    networks:
      - net-ms

  gateway:
    build:
      dockerfile: gateway/Dockerfile
      context: .
    image: localhost:5001/image-gateway
    container_name: gateway
    ports:
      - 8085:3000
    environment:
      - PORT=3000
      - PATH_AUTH=http://ms-auth:3000
      - PATH_ORDER=http://ms-order:3000
    depends_on:
      - ms-auth
      - ms-order
      - rabbitmq
    restart: always
    networks:
      - net-ms
volumes:
  mongo-auth-volume:
  mongo-order-volume:
  mongo-payment-volume:
  mongo-store-volume:
  mongo-delivery-volume:

networks:
  net-ms: